import tkinter as tk
from tkinter import messagebox
import random

class HangmanGame:
    def __init__(self, master):
        self.master = master
        self.master.title("Hangman Game")
        self.word_to_guess = self.choose_word()
        self.remaining_attempts = 6
        self.guesses = []
        self.create_widgets()

    def choose_word(self):
        words = ["python", "hangman", "programming", "code", "computer", "algorithm", "developer"]
        return random.choice(words)

    def create_widgets(self):
        self.word_label = tk.Label(self.master, text=self.display_word())
        self.word_label.pack(pady=10)

        self.guess_entry = tk.Entry(self.master)
        self.guess_entry.pack(pady=10)

        self.guess_button = tk.Button(self.master, text="Guess", command=self.make_guess)
        self.guess_button.pack()

        self.remaining_attempts_label = tk.Label(self.master, text=f"Remaining Attempts: {self.remaining_attempts}")
        self.remaining_attempts_label.pack()

    def display_word(self):
        return " ".join([letter if letter in self.guesses else "_" for letter in self.word_to_guess])

    def make_guess(self):
        guess = self.guess_entry.get().lower()

        if len(guess) == 1 and guess.isalpha():
            if guess in self.guesses:
                messagebox.showinfo("Duplicate Guess", "You already guessed this letter.")
            elif guess in self.word_to_guess:
                self.guesses.append(guess)
                self.check_game_status()
            else:
                self.remaining_attempts -= 1
                self.check_game_status()

            self.update_ui()
        else:
            messagebox.showerror("Invalid Guess", "Please enter a single letter.")

        self.guess_entry.delete(0, tk.END)

    def check_game_status(self):
        if set(self.word_to_guess) <= set(self.guesses):
            messagebox.showinfo("Congratulations!", "You guessed the word! You win!")
            self.reset_game()
        elif self.remaining_attempts == 0:
            messagebox.showinfo("Game Over", f"You ran out of attempts. The word was {self.word_to_guess}.")
            self.reset_game()

    def update_ui(self):
        self.word_label.config(text=self.display_word())
        self.remaining_attempts_label.config(text=f"Remaining Attempts: {self.remaining_attempts}")

    def reset_game(self):
        self.word_to_guess = self.choose_word()
        self.remaining_attempts = 6
        self.guesses = []
        self.update_ui()

if __name__ == "__main__":
  root = tk.Tk()
  hangman_game = HangmanGame(root)
  root.mainloop()
